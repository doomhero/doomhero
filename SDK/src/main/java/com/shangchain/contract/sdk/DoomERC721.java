package com.shangchain.contract.sdk;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;

import org.web3j.abi.EventEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.Event;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.request.EthFilter;
import org.web3j.protocol.core.methods.response.BaseEventResponse;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

import io.reactivex.Flowable;
import io.reactivex.functions.Function;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 1.4.1.
 */
@SuppressWarnings("rawtypes")
public class DoomERC721 extends Contract {
    public static final String BINARY = "6004805460ff1916905560e060405260246080818152906200294260a03980516200003391600d916020909101906200014d565b5060408051808201909152600580825264173539b7b760d91b60209092019182526200006291600e916200014d565b503480156200007057600080fd5b506301ffc9a760e01b600090815260208190527f67be87c3ff9960ca1e9cfac5cab2ff4747269cf9ed20c9b7306235ac35a491c5805460ff19166001179055620000b962000149565b600180546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350635b5e139f60e01b60009081526020527f9562381dfbc2d8b8b66e765249f330164b73e329e5f01670660643571d1974df805460ff19166001179055620001e9565b3390565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200019057805160ff1916838001178555620001c0565b82800160010185558215620001c0579182015b82811115620001c0578251825591602001919060010190620001a3565b50620001ce929150620001d2565b5090565b5b80821115620001ce5760008155600101620001d3565b61274980620001f96000396000f3fe6080604052600436106101d85760003560e01c8063715018a611610102578063c0ac998311610095578063e985e9c511610064578063e985e9c51461074b578063f2fde38b14610786578063f3ae2415146107b9578063faf42125146107ec576101d8565b8063c0ac9983146106c4578063c87b56dd146106d9578063dbbc853b14610703578063e045fd0414610718576101d8565b806395d89b41116100d157806395d89b411461057b578063a22cb46514610590578063ac18de43146105cb578063b88d4fde146105fe576101d8565b8063715018a61461050957806377620c1c1461051e5780638456cb59146105515780638da5cb5b14610566576101d8565b80632f745c591161017a5780634f6ccce7116101495780634f6ccce71461046d5780635c975abb146104975780636352211e146104ac57806370a08231146104d6576101d8565b80632f745c59146103b357806337d19214146103ec5780633f4ba83a1461041f57806340c10f1914610434576101d8565b8063095ea7b3116101b6578063095ea7b3146102f557806318160ddd1461032357806323b872dd1461034a5780632d06177a14610380576101d8565b806301ffc9a7146101dd57806306fdde0314610225578063081812fc146102af575b600080fd5b3480156101e957600080fd5b506102116004803603602081101561020057600080fd5b50356001600160e01b031916610926565b604080519115158252519081900360200190f35b34801561023157600080fd5b5061023a610945565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561027457818101518382015260200161025c565b50505050905090810190601f1680156102a15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156102bb57600080fd5b506102d9600480360360208110156102d257600080fd5b5035610963565b604080516001600160a01b039092168252519081900360200190f35b6103216004803603604081101561030b57600080fd5b506001600160a01b0381351690602001356109e3565b005b34801561032f57600080fd5b50610338610c25565b60408051918252519081900360200190f35b6103216004803603606081101561036057600080fd5b506001600160a01b03813581169160208101359091169060400135610c2b565b34801561038c57600080fd5b50610321600480360360208110156103a357600080fd5b50356001600160a01b0316610c4d565b3480156103bf57600080fd5b50610338600480360360408110156103d657600080fd5b506001600160a01b038135169060200135610d42565b3480156103f857600080fd5b506103216004803603602081101561040f57600080fd5b50356001600160a01b0316610e2d565b34801561042b57600080fd5b50610321610f59565b34801561044057600080fd5b506103216004803603604081101561045757600080fd5b506001600160a01b038135169060200135611008565b34801561047957600080fd5b506103386004803603602081101561049057600080fd5b5035611128565b3480156104a357600080fd5b5061021161118b565b3480156104b857600080fd5b506102d9600480360360208110156104cf57600080fd5b5035611194565b3480156104e257600080fd5b50610338600480360360208110156104f957600080fd5b50356001600160a01b0316611214565b34801561051557600080fd5b50610321611280565b34801561052a57600080fd5b506103216004803603602081101561054157600080fd5b50356001600160a01b0316611322565b34801561055d57600080fd5b50610321611451565b34801561057257600080fd5b506102d9611542565b34801561058757600080fd5b5061023a611551565b34801561059c57600080fd5b50610321600480360360408110156105b357600080fd5b506001600160a01b038135169060200135151561156f565b3480156105d757600080fd5b50610321600480360360208110156105ee57600080fd5b50356001600160a01b03166116a4565b6103216004803603608081101561061457600080fd5b6001600160a01b0382358116926020810135909116916040820135919081019060808101606082013564010000000081111561064f57600080fd5b82018360208201111561066157600080fd5b8035906020019184600183028401116401000000008311171561068357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550611796945050505050565b3480156106d057600080fd5b5061023a6117aa565b3480156106e557600080fd5b5061023a600480360360208110156106fc57600080fd5b5035611838565b34801561070f57600080fd5b5061023a611b2c565b34801561072457600080fd5b506102116004803603602081101561073b57600080fd5b50356001600160a01b0316611b87565b34801561075757600080fd5b506102116004803603604081101561076e57600080fd5b506001600160a01b0381358116916020013516611ba5565b34801561079257600080fd5b50610321600480360360208110156107a957600080fd5b50356001600160a01b0316611bd3565b3480156107c557600080fd5b50610211600480360360208110156107dc57600080fd5b50356001600160a01b0316611c37565b3480156107f857600080fd5b506103216004803603604081101561080f57600080fd5b81019060208101813564010000000081111561082a57600080fd5b82018360208201111561083c57600080fd5b8035906020019184600183028401116401000000008311171561085e57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092959493602081019350359150506401000000008111156108b157600080fd5b8201836020820111156108c357600080fd5b803590602001918460018302840111640100000000831117156108e557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550611c55945050505050565b6001600160e01b03191660009081526020819052604090205460ff1690565b604080518082019091526004815263446f6f6d60e01b602082015290565b60008181526008602052604081205482906001600160a01b03166109c6576040805162461bcd60e51b815260206004820152601560248201527411549493d48e881d985b1a59081d1bdad95b881a59605a1b604482015290519081900360640190fd5b50506000908152600a60205260409020546001600160a01b031690565b60008181526008602052604090205481906001600160a01b0316610a46576040805162461bcd60e51b815260206004820152601560248201527411549493d48e881d985b1a59081d1bdad95b881a59605a1b604482015290519081900360640190fd5b81610a513382611cd4565b80610a615750610a613382611cf4565b610a9c5760405162461bcd60e51b81526004018080602001828103825260228152602001806126f26022913960400191505060405180910390fd5b60045460ff1615610aec576040805162461bcd60e51b81526020600482015260156024820152744552524f523a206973206e6f74207061757365642160581b604482015290519081900360640190fd5b6000838152600860205260409020546001600160a01b03908116908516811415610b54576040805162461bcd60e51b815260206004820152601460248201527322a92927a91d1030b2323932b9b99032b93937b960611b604482015290519081900360640190fd5b6000848152600a60205260409020546001600160a01b0386811691161415610bba576040805162461bcd60e51b815260206004820152601460248201527322a92927a91d1030b2323932b9b99032b93937b960611b604482015290519081900360640190fd5b6000848152600a602090815260409182902080546001600160a01b0319166001600160a01b03898116918217909255835188815293519093918516927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a35050505050565b60055490565b610c48838383604051806020016040528060008152506000611d29565b505050565b610c556120d9565b6001546001600160a01b03908116911614610ca5576040805162461bcd60e51b815260206004820181905260248201526000805160206126d2833981519152604482015290519081900360640190fd5b6001600160a01b038116610cea5760405162461bcd60e51b81526004018080602001828103825260268152602001806126ac6026913960400191505060405180910390fd5b6040516001600160a01b038216907f3630096a7f9a158ab9fae41e86bfe31fd2202585a26a9668242672566dae028d90600090a26001600160a01b03166000908152600260205260409020805460ff19166001179055565b60006001600160a01b038316610d92576040805162461bcd60e51b815260206004820152601060248201526f04552524f523a206164647265737320360841b604482015290519081900360640190fd5b6001600160a01b0383166000908152600b60205260409020548210610df6576040805162461bcd60e51b81526020600482015260156024820152744552524f523a20696e646578206f766572666c6f7760581b604482015290519081900360640190fd5b6001600160a01b0383166000908152600b60205260409020805483908110610e1a57fe5b9060005260206000200154905092915050565b60026000610e396120d9565b6001600160a01b0316815260208101919091526040016000205460ff1680610e805750610e646120d9565b6001600160a01b0316610e75611542565b6001600160a01b0316145b610ebf576040805162461bcd60e51b815260206004820181905260248201526000805160206126d2833981519152604482015290519081900360640190fd5b6001600160a01b038116610f045760405162461bcd60e51b81526004018080602001828103825260268152602001806126ac6026913960400191505060405180910390fd5b6040516001600160a01b038216907f9907010cb07bcc35f9695c5085fb5bd148bd5f067a632eb14f03fc15e765e79590600090a26001600160a01b03166000908152600360205260409020805460ff19169055565b610f616120d9565b6001546001600160a01b03908116911614610fb1576040805162461bcd60e51b815260206004820181905260248201526000805160206126d2833981519152604482015290519081900360640190fd5b60045460ff16610ffc576040805162461bcd60e51b81526020600482015260116024820152704552524f523a206973207061757365642160781b604482015290519081900360640190fd5b6004805460ff19169055565b600360006110146120d9565b6001600160a01b0316815260208101919091526040016000205460ff16806110615750600260006110436120d9565b6001600160a01b0316815260208101919091526040016000205460ff165b8061108b575061106f6120d9565b6001600160a01b0316611080611542565b6001600160a01b0316145b6110ca576040805162461bcd60e51b815260206004820181905260248201526000805160206126d2833981519152604482015290519081900360640190fd5b60045460ff161561111a576040805162461bcd60e51b81526020600482015260156024820152744552524f523a206973206e6f74207061757365642160581b604482015290519081900360640190fd5b61112482826120dd565b5050565b60006005548210611178576040805162461bcd60e51b81526020600482015260156024820152744552524f523a20696e646578206f766572666c6f7760581b604482015290519081900360640190fd5b5060009081526006602052604090205490565b60045460ff1681565b60008181526008602052604081205482906001600160a01b03166111f7576040805162461bcd60e51b815260206004820152601560248201527411549493d48e881d985b1a59081d1bdad95b881a59605a1b604482015290519081900360640190fd5b50506000908152600860205260409020546001600160a01b031690565b60006001600160a01b038216611264576040805162461bcd60e51b815260206004820152601060248201526f04552524f523a206164647265737320360841b604482015290519081900360640190fd5b506001600160a01b03166000908152600b602052604090205490565b6112886120d9565b6001546001600160a01b039081169116146112d8576040805162461bcd60e51b815260206004820181905260248201526000805160206126d2833981519152604482015290519081900360640190fd5b6001546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600180546001600160a01b0319169055565b6002600061132e6120d9565b6001600160a01b0316815260208101919091526040016000205460ff168061137557506113596120d9565b6001600160a01b031661136a611542565b6001600160a01b0316145b6113b4576040805162461bcd60e51b815260206004820181905260248201526000805160206126d2833981519152604482015290519081900360640190fd5b6001600160a01b0381166113f95760405162461bcd60e51b81526004018080602001828103825260268152602001806126ac6026913960400191505060405180910390fd5b6040516001600160a01b038216907fedf13524efd96688c052ae7c65e684498e06a3fc5ead65dd92cbd2fe1a51561990600090a26001600160a01b03166000908152600360205260409020805460ff19166001179055565b6002600061145d6120d9565b6001600160a01b0316815260208101919091526040016000205460ff16806114a457506114886120d9565b6001600160a01b0316611499611542565b6001600160a01b0316145b6114e3576040805162461bcd60e51b815260206004820181905260248201526000805160206126d2833981519152604482015290519081900360640190fd5b60045460ff1615611533576040805162461bcd60e51b81526020600482015260156024820152744552524f523a206973206e6f74207061757365642160581b604482015290519081900360640190fd5b6004805460ff19166001179055565b6001546001600160a01b031690565b604080518082019091526004815263444f4f4d60e01b602082015290565b60045460ff16156115bf576040805162461bcd60e51b81526020600482015260156024820152744552524f523a206973206e6f74207061757365642160581b604482015290519081900360640190fd5b3360009081526009602090815260408083206001600160a01b038616845290915290205460ff1615158115151415611636576040805162461bcd60e51b815260206004820152601560248201527422a92927a91d1037b832b930ba37b91032b93937b960591b604482015290519081900360640190fd5b3360008181526009602090815260408083206001600160a01b03871680855290835292819020805460ff1916861515908117909155815190815290519293927f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31929181900390910190a35050565b6116ac6120d9565b6001546001600160a01b039081169116146116fc576040805162461bcd60e51b815260206004820181905260248201526000805160206126d2833981519152604482015290519081900360640190fd5b6001600160a01b0381166117415760405162461bcd60e51b81526004018080602001828103825260268152602001806126ac6026913960400191505060405180910390fd5b6040516001600160a01b038216907f1e25ed4cabec84d314dc176241019653f237da01f2bdd3a10cb0f38b33da676390600090a26001600160a01b03166000908152600260205260409020805460ff19169055565b6117a4848484846001611d29565b50505050565b600d805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156118305780601f1061180557610100808354040283529160200191611830565b820191906000526020600020905b81548152906001019060200180831161181357829003601f168201915b505050505081565b60008181526008602052604090205460609082906001600160a01b031661189e576040805162461bcd60e51b815260206004820152601560248201527411549493d48e881d985b1a59081d1bdad95b881a59605a1b604482015290519081900360640190fd5b600d8054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561192a5780601f106118ff5761010080835404028352916020019161192a565b820191906000526020600020905b81548152906001019060200180831161190d57829003601f168201915b5050600e8054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152969750606096955091935091508301828280156119be5780601f10611993576101008083540402835291602001916119be565b820191906000526020600020905b8154815290600101906020018083116119a157829003601f168201915b5050835193945088925060009150505b600101600a82049150600082116119ce57606083828751010167ffffffffffffffff811180156119fd57600080fd5b506040519080825280601f01601f191660200182016040528015611a28576020820181803683370190505b50905060006001858351030390508993505b600a840660300160f81b82828060019003935081518110611a5757fe5b60200101906001600160f81b031916908160001a905350600a8404935060008411611a3a575060005b8651811015611acb57868181518110611a9557fe5b602001015160f81c60f81b828281518110611aac57fe5b60200101906001600160f81b031916908160001a905350600101611a80565b5060005b8551811015611b1f57858181518110611ae457fe5b602001015160f81c60f81b8286838551010381518110611b0057fe5b60200101906001600160f81b031916908160001a905350600101611acf565b5098975050505050505050565b600e805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156118305780601f1061180557610100808354040283529160200191611830565b6001600160a01b031660009081526003602052604090205460ff1690565b6001600160a01b03918216600090815260096020908152604080832093909416825291909152205460ff1690565b611bdb6120d9565b6001546001600160a01b03908116911614611c2b576040805162461bcd60e51b815260206004820181905260248201526000805160206126d2833981519152604482015290519081900360640190fd5b611c34816121bf565b50565b6001600160a01b031660009081526002602052604090205460ff1690565b611c5d6120d9565b6001546001600160a01b03908116911614611cad576040805162461bcd60e51b815260206004820181905260248201526000805160206126d2833981519152604482015290519081900360640190fd5b8151611cc090600d9060208501906125fe565b508051610c4890600e9060208401906125fe565b6000908152600860205260409020546001600160a01b0391821691161490565b6000908152600860209081526040808320546001600160a01b0390811684526009835281842094168352929052205460ff1690565b60008381526008602052604090205483906001600160a01b0316611d8c576040805162461bcd60e51b815260206004820152601560248201527411549493d48e881d985b1a59081d1bdad95b881a59605a1b604482015290519081900360640190fd5b83611d973382611cd4565b80611da75750611da73382611cf4565b80611db75750611db73382612260565b611e08576040805162461bcd60e51b815260206004820152601b60248201527f4552524f523a206e6f7420746f6b656e20617574686f72697a65640000000000604482015290519081900360640190fd5b611e128786611cd4565b611e63576040805162461bcd60e51b815260206004820152601760248201527f4552524f523a20617574686f72697a6564206572726f72000000000000000000604482015290519081900360640190fd5b6001600160a01b038616611eb1576040805162461bcd60e51b815260206004820152601060248201526f04552524f523a206164647265737320360841b604482015290519081900360640190fd5b866001600160a01b0316866001600160a01b03161415611f10576040805162461bcd60e51b81526020600482015260156024820152744552524f523a2066726f6d20657175616c7320746f60581b604482015290519081900360640190fd5b611f1a8786612280565b6000858152600a6020908152604080832080546001600160a01b0319169055805188815290516001600160a01b038b16927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a3611f7d868661241c565b828015611f8e5750611f8e866124c3565b1561208557856001600160a01b031663f0b9e5ba61c3508988886040518563ffffffff1660e01b815260040180846001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015612009578181015183820152602001611ff1565b50505050905090810190601f1680156120365780820380516001836020036101000a031916815260200191505b50945050505050602060405180830381600088803b15801561205757600080fd5b5087f115801561206b573d6000803e3d6000fd5b50505050506040513d602081101561208257600080fd5b50505b856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef876040518082815260200191505060405180910390a350505050505050565b3390565b6000818152600860205260409020546001600160a01b03161561213a576040805162461bcd60e51b815260206004820152601060248201526f04552524f523a206164647265737320360841b604482015290519081900360640190fd5b612144828261241c565b600580546000908152600660209081526040808320859055925484835260079091529190208190556121779060016124c9565b6005556040805182815290516001600160a01b038416916000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b6001600160a01b0381166122045760405162461bcd60e51b81526004018080602001828103825260268152602001806126ac6026913960400191505060405180910390fd5b6001546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000908152600a60205260409020546001600160a01b0391821691161490565b6001600160a01b0382166122ce576040805162461bcd60e51b815260206004820152601060248201526f04552524f523a206164647265737320360841b604482015290519081900360640190fd5b6000818152600c60209081526040808320546001600160a01b0386168452600b90925282205490919061230290600161252a565b6001600160a01b0385166000908152600b60205260408120805492935090918390811061232b57fe5b600091825260208083209091015486835260088252604080842080546001600160a01b03191690556001600160a01b0389168452600b9092529120805491925082918590811061237757fe5b6000918252602080832090910192909255828152600c825260408082208690556001600160a01b0388168252600b909252208054806123b257fe5b6000828152602080822083016000199081018390559092019092556001600160a01b0387168252600b90526040902054612407576001600160a01b0385166000908152600b602052604081206124079161267c565b5050506000908152600c602052604081205550565b6001600160a01b03821661246a576040805162461bcd60e51b815260206004820152601060248201526f04552524f523a206164647265737320360841b604482015290519081900360640190fd5b600081815260086020908152604080832080546001600160a01b039096166001600160a01b031990961686179055938252600b815283822080546001810182559083528183208101849055928252600c90529190912055565b3b151590565b600082820183811015612523576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b600061252383836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250600081848411156125f65760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156125bb5781810151838201526020016125a3565b50505050905090810190601f1680156125e85780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061263f57805160ff191683800117855561266c565b8280016001018555821561266c579182015b8281111561266c578251825591602001919060010190612651565b50612678929150612696565b5090565b5080546000825590600052602060002090810190611c3491905b5b80821115612678576000815560010161269756fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65724552524f523a206e6f7420746f6b656e206f776e6572206f72206f70657261746f72a26469706673582212205c25345073155b3e0a02b0f40f6b0a9f0978f8a7b75817a47f7a7ed8f73afda664736f6c634300060c003368747470733a2f2f6c6f63616c686f73743a383038302f6572632f3732312f6c6973742f";

    public static final String FUNC_ADDGAMEMANAGER = "addGameManager";

    public static final String FUNC_ADDMANAGER = "addManager";

    public static final String FUNC_APPROVE = "approve";

    public static final String FUNC_BALANCEOF = "balanceOf";

    public static final String FUNC_GETAPPROVED = "getApproved";

    public static final String FUNC_ISAPPROVEDFORALL = "isApprovedForAll";

    public static final String FUNC_ISGAMEMANAGER = "isGameManager";

    public static final String FUNC_ISMANAGER = "isManager";

    public static final String FUNC_MINT = "mint";

    public static final String FUNC_NAME = "name";

    public static final String FUNC_OWNER = "owner";

    public static final String FUNC_OWNEROF = "ownerOf";

    public static final String FUNC_PAUSE = "pause";

    public static final String FUNC_PAUSED = "paused";

    public static final String FUNC_REMOVEGAMEMANAGER = "removeGameManager";

    public static final String FUNC_REMOVEMANAGER = "removeManager";

    public static final String FUNC_RENOUNCEOWNERSHIP = "renounceOwnership";

    public static final String FUNC_SAFETRANSFERFROM = "safeTransferFrom";

    public static final String FUNC_SETAPPROVALFORALL = "setApprovalForAll";

    public static final String FUNC_SETTOKENURIAFFIXES = "setTokenURIAffixes";

    public static final String FUNC_SUPPORTSINTERFACE = "supportsInterface";

    public static final String FUNC_SYMBOL = "symbol";

    public static final String FUNC_TOKENBYINDEX = "tokenByIndex";

    public static final String FUNC_TOKENOFOWNERBYINDEX = "tokenOfOwnerByIndex";

    public static final String FUNC_TOKENURI = "tokenURI";

    public static final String FUNC_TOKENURIPREFIX = "tokenURIPrefix";

    public static final String FUNC_TOKENURISUFFIX = "tokenURISuffix";

    public static final String FUNC_TOTALSUPPLY = "totalSupply";

    public static final String FUNC_TRANSFERFROM = "transferFrom";

    public static final String FUNC_TRANSFEROWNERSHIP = "transferOwnership";

    public static final String FUNC_UNPAUSE = "unpause";

    public static final Event ADDGAMEMANAGER_EVENT = new Event("AddGameManager", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}));
    ;

    public static final Event ADDMANAGER_EVENT = new Event("AddManager", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}));
    ;

    public static final Event APPROVAL_EVENT = new Event("Approval", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Address>(true) {}, new TypeReference<Uint256>() {}));
    ;

    public static final Event APPROVALFORALL_EVENT = new Event("ApprovalForAll", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Address>(true) {}, new TypeReference<Bool>() {}));
    ;

    public static final Event OWNERSHIPTRANSFERRED_EVENT = new Event("OwnershipTransferred", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Address>(true) {}));
    ;

    public static final Event REMOVEGAMEMANAGER_EVENT = new Event("RemoveGameManager", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}));
    ;

    public static final Event REMOVEMANAGER_EVENT = new Event("RemoveManager", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}));
    ;

    public static final Event TRANSFER_EVENT = new Event("Transfer", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Address>(true) {}, new TypeReference<Uint256>() {}));
    ;

    @Deprecated
    protected DoomERC721(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected DoomERC721(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected DoomERC721(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected DoomERC721(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public List<AddGameManagerEventResponse> getAddGameManagerEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(ADDGAMEMANAGER_EVENT, transactionReceipt);
        ArrayList<AddGameManagerEventResponse> responses = new ArrayList<AddGameManagerEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            AddGameManagerEventResponse typedResponse = new AddGameManagerEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.newManager = (String) eventValues.getIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<AddGameManagerEventResponse> addGameManagerEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, AddGameManagerEventResponse>() {
            @Override
            public AddGameManagerEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(ADDGAMEMANAGER_EVENT, log);
                AddGameManagerEventResponse typedResponse = new AddGameManagerEventResponse();
                typedResponse.log = log;
                typedResponse.newManager = (String) eventValues.getIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<AddGameManagerEventResponse> addGameManagerEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ADDGAMEMANAGER_EVENT));
        return addGameManagerEventFlowable(filter);
    }

    public List<AddManagerEventResponse> getAddManagerEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(ADDMANAGER_EVENT, transactionReceipt);
        ArrayList<AddManagerEventResponse> responses = new ArrayList<AddManagerEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            AddManagerEventResponse typedResponse = new AddManagerEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.newManager = (String) eventValues.getIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<AddManagerEventResponse> addManagerEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, AddManagerEventResponse>() {
            @Override
            public AddManagerEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(ADDMANAGER_EVENT, log);
                AddManagerEventResponse typedResponse = new AddManagerEventResponse();
                typedResponse.log = log;
                typedResponse.newManager = (String) eventValues.getIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<AddManagerEventResponse> addManagerEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ADDMANAGER_EVENT));
        return addManagerEventFlowable(filter);
    }

    public List<ApprovalEventResponse> getApprovalEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(APPROVAL_EVENT, transactionReceipt);
        ArrayList<ApprovalEventResponse> responses = new ArrayList<ApprovalEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            ApprovalEventResponse typedResponse = new ApprovalEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._owner = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse._approved = (String) eventValues.getIndexedValues().get(1).getValue();
            typedResponse._tokenId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<ApprovalEventResponse> approvalEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, ApprovalEventResponse>() {
            @Override
            public ApprovalEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(APPROVAL_EVENT, log);
                ApprovalEventResponse typedResponse = new ApprovalEventResponse();
                typedResponse.log = log;
                typedResponse._owner = (String) eventValues.getIndexedValues().get(0).getValue();
                typedResponse._approved = (String) eventValues.getIndexedValues().get(1).getValue();
                typedResponse._tokenId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<ApprovalEventResponse> approvalEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(APPROVAL_EVENT));
        return approvalEventFlowable(filter);
    }

    public List<ApprovalForAllEventResponse> getApprovalForAllEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(APPROVALFORALL_EVENT, transactionReceipt);
        ArrayList<ApprovalForAllEventResponse> responses = new ArrayList<ApprovalForAllEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            ApprovalForAllEventResponse typedResponse = new ApprovalForAllEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._owner = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse._operator = (String) eventValues.getIndexedValues().get(1).getValue();
            typedResponse._approved = (Boolean) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<ApprovalForAllEventResponse> approvalForAllEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, ApprovalForAllEventResponse>() {
            @Override
            public ApprovalForAllEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(APPROVALFORALL_EVENT, log);
                ApprovalForAllEventResponse typedResponse = new ApprovalForAllEventResponse();
                typedResponse.log = log;
                typedResponse._owner = (String) eventValues.getIndexedValues().get(0).getValue();
                typedResponse._operator = (String) eventValues.getIndexedValues().get(1).getValue();
                typedResponse._approved = (Boolean) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<ApprovalForAllEventResponse> approvalForAllEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(APPROVALFORALL_EVENT));
        return approvalForAllEventFlowable(filter);
    }

    public List<OwnershipTransferredEventResponse> getOwnershipTransferredEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(OWNERSHIPTRANSFERRED_EVENT, transactionReceipt);
        ArrayList<OwnershipTransferredEventResponse> responses = new ArrayList<OwnershipTransferredEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            OwnershipTransferredEventResponse typedResponse = new OwnershipTransferredEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.previousOwner = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.newOwner = (String) eventValues.getIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<OwnershipTransferredEventResponse> ownershipTransferredEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, OwnershipTransferredEventResponse>() {
            @Override
            public OwnershipTransferredEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(OWNERSHIPTRANSFERRED_EVENT, log);
                OwnershipTransferredEventResponse typedResponse = new OwnershipTransferredEventResponse();
                typedResponse.log = log;
                typedResponse.previousOwner = (String) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.newOwner = (String) eventValues.getIndexedValues().get(1).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<OwnershipTransferredEventResponse> ownershipTransferredEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(OWNERSHIPTRANSFERRED_EVENT));
        return ownershipTransferredEventFlowable(filter);
    }

    public List<RemoveGameManagerEventResponse> getRemoveGameManagerEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(REMOVEGAMEMANAGER_EVENT, transactionReceipt);
        ArrayList<RemoveGameManagerEventResponse> responses = new ArrayList<RemoveGameManagerEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            RemoveGameManagerEventResponse typedResponse = new RemoveGameManagerEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.manager = (String) eventValues.getIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<RemoveGameManagerEventResponse> removeGameManagerEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, RemoveGameManagerEventResponse>() {
            @Override
            public RemoveGameManagerEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(REMOVEGAMEMANAGER_EVENT, log);
                RemoveGameManagerEventResponse typedResponse = new RemoveGameManagerEventResponse();
                typedResponse.log = log;
                typedResponse.manager = (String) eventValues.getIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<RemoveGameManagerEventResponse> removeGameManagerEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(REMOVEGAMEMANAGER_EVENT));
        return removeGameManagerEventFlowable(filter);
    }

    public List<RemoveManagerEventResponse> getRemoveManagerEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(REMOVEMANAGER_EVENT, transactionReceipt);
        ArrayList<RemoveManagerEventResponse> responses = new ArrayList<RemoveManagerEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            RemoveManagerEventResponse typedResponse = new RemoveManagerEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.manager = (String) eventValues.getIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<RemoveManagerEventResponse> removeManagerEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, RemoveManagerEventResponse>() {
            @Override
            public RemoveManagerEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(REMOVEMANAGER_EVENT, log);
                RemoveManagerEventResponse typedResponse = new RemoveManagerEventResponse();
                typedResponse.log = log;
                typedResponse.manager = (String) eventValues.getIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<RemoveManagerEventResponse> removeManagerEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(REMOVEMANAGER_EVENT));
        return removeManagerEventFlowable(filter);
    }

    public List<TransferEventResponse> getTransferEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(TRANSFER_EVENT, transactionReceipt);
        ArrayList<TransferEventResponse> responses = new ArrayList<TransferEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            TransferEventResponse typedResponse = new TransferEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._from = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse._to = (String) eventValues.getIndexedValues().get(1).getValue();
            typedResponse._tokenId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<TransferEventResponse> transferEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, TransferEventResponse>() {
            @Override
            public TransferEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(TRANSFER_EVENT, log);
                TransferEventResponse typedResponse = new TransferEventResponse();
                typedResponse.log = log;
                typedResponse._from = (String) eventValues.getIndexedValues().get(0).getValue();
                typedResponse._to = (String) eventValues.getIndexedValues().get(1).getValue();
                typedResponse._tokenId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<TransferEventResponse> transferEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(TRANSFER_EVENT));
        return transferEventFlowable(filter);
    }

    public RemoteFunctionCall<TransactionReceipt> addGameManager(String newManager) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ADDGAMEMANAGER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, newManager)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> addManager(String newManager) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ADDMANAGER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, newManager)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> approve(String _approved, BigInteger _tokenId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_APPROVE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _approved), 
                new org.web3j.abi.datatypes.generated.Uint256(_tokenId)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<BigInteger> balanceOf(String _owner) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_BALANCEOF, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _owner)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<String> getApproved(BigInteger _tokenId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETAPPROVED, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_tokenId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<Boolean> isApprovedForAll(String _owner, String _operator) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_ISAPPROVEDFORALL, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _owner), 
                new org.web3j.abi.datatypes.Address(160, _operator)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<Boolean> isGameManager(String manager) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_ISGAMEMANAGER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, manager)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<Boolean> isManager(String manager) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_ISMANAGER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, manager)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<TransactionReceipt> mint(String _to, BigInteger _tokenId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_MINT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _to), 
                new org.web3j.abi.datatypes.generated.Uint256(_tokenId)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<String> name() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_NAME, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<String> owner() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_OWNER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<String> ownerOf(BigInteger _tokenId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_OWNEROF, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_tokenId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<TransactionReceipt> pause() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_PAUSE, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<Boolean> paused() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_PAUSED, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<TransactionReceipt> removeGameManager(String manager) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_REMOVEGAMEMANAGER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, manager)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> removeManager(String manager) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_REMOVEMANAGER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, manager)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> renounceOwnership() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_RENOUNCEOWNERSHIP, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> safeTransferFrom(String _from, String _to, BigInteger _tokenId, byte[] _data) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SAFETRANSFERFROM, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _from), 
                new org.web3j.abi.datatypes.Address(160, _to), 
                new org.web3j.abi.datatypes.generated.Uint256(_tokenId), 
                new org.web3j.abi.datatypes.DynamicBytes(_data)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setApprovalForAll(String _operator, Boolean _approved) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETAPPROVALFORALL, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _operator), 
                new org.web3j.abi.datatypes.Bool(_approved)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setTokenURIAffixes(String _prefix, String _suffix) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETTOKENURIAFFIXES, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_prefix), 
                new org.web3j.abi.datatypes.Utf8String(_suffix)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<Boolean> supportsInterface(byte[] interfaceID) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_SUPPORTSINTERFACE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes4(interfaceID)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<String> symbol() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_SYMBOL, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<BigInteger> tokenByIndex(BigInteger _index) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_TOKENBYINDEX, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_index)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> tokenOfOwnerByIndex(String _owner, BigInteger _index) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_TOKENOFOWNERBYINDEX, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _owner), 
                new org.web3j.abi.datatypes.generated.Uint256(_index)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<String> tokenURI(BigInteger _tokenId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_TOKENURI, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_tokenId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<String> tokenURIPrefix() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_TOKENURIPREFIX, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<String> tokenURISuffix() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_TOKENURISUFFIX, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<BigInteger> totalSupply() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_TOTALSUPPLY, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<TransactionReceipt> transferFrom(String _from, String _to, BigInteger _tokenId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_TRANSFERFROM, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _from), 
                new org.web3j.abi.datatypes.Address(160, _to), 
                new org.web3j.abi.datatypes.generated.Uint256(_tokenId)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function, new BigInteger("1000000"));
    }
    
    public RemoteFunctionCall<TransactionReceipt> transferOwnership(String newOwner) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_TRANSFEROWNERSHIP, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, newOwner)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> unpause() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_UNPAUSE, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }
    
    

    @Deprecated
    public static DoomERC721 load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new DoomERC721(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static DoomERC721 load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new DoomERC721(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static DoomERC721 load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new DoomERC721(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static DoomERC721 load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new DoomERC721(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<DoomERC721> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(DoomERC721.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<DoomERC721> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(DoomERC721.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    public static RemoteCall<DoomERC721> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(DoomERC721.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<DoomERC721> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(DoomERC721.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }

    public static class AddGameManagerEventResponse extends BaseEventResponse {
        public String newManager;
    }

    public static class AddManagerEventResponse extends BaseEventResponse {
        public String newManager;
    }

    public static class ApprovalEventResponse extends BaseEventResponse {
        public String _owner;

        public String _approved;

        public BigInteger _tokenId;
    }

    public static class ApprovalForAllEventResponse extends BaseEventResponse {
        public String _owner;

        public String _operator;

        public Boolean _approved;
    }

    public static class OwnershipTransferredEventResponse extends BaseEventResponse {
        public String previousOwner;

        public String newOwner;
    }

    public static class RemoveGameManagerEventResponse extends BaseEventResponse {
        public String manager;
    }

    public static class RemoveManagerEventResponse extends BaseEventResponse {
        public String manager;
    }

    public static class TransferEventResponse extends BaseEventResponse {
        public String _from;

        public String _to;

        public BigInteger _tokenId;
    }
}
